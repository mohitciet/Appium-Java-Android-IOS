<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="3" passed="2">
  <reporter-output>
    <line>
      <![CDATA[This is the sample screenshot]]>
    </line>
    <line>
      <![CDATA[<a href='D:\POC\JAVA Selenium TDD\AppiumMobileAutomation\Screenshots\Android_Pixel_2\2020-08-12-11-44-45\LoginTests\invalidUserName.png'> <img src='D:\POC\JAVA Selenium TDD\AppiumMobileAutomation\Screenshots\Android_Pixel_2\2020-08-12-11-44-45\LoginTests\invalidUserName.png' height='400' width='400'/> </a>]]>
    </line>
  </reporter-output>
  <suite name="Appium Mobile Automation" duration-ms="143527" started-at="2020-08-12T06:14:45Z" finished-at="2020-08-12T06:17:09Z">
    <groups>
    </groups>
    <test name="Pixel_2" duration-ms="143527" started-at="2020-08-12T06:14:45Z" finished-at="2020-08-12T06:17:09Z">
      <class name="com.qa.mobile.testcases.LoginTests">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:com.qa.mobile.testcases.LoginTests@80503]" name="beforeSuite" is-config="true" duration-ms="1198" started-at="2020-08-12T06:14:44Z" finished-at="2020-08-12T06:14:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="beforeTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String)[pri:0, instance:com.qa.mobile.testcases.LoginTests@80503]" name="beforeTest" is-config="true" duration-ms="64428" started-at="2020-08-12T06:14:45Z" finished-at="2020-08-12T06:15:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[true]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[emulator-5554]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[Pixel_2]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[10000]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[11000]]>
              </value>
            </param>
            <param index="6">
              <value>
                <![CDATA[iOSOnly]]>
              </value>
            </param>
            <param index="7">
              <value>
                <![CDATA[iOSOnly]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:com.qa.mobile.testcases.LoginTests@80503]" name="beforeClass" is-config="true" duration-ms="14400" started-at="2020-08-12T06:15:50Z" finished-at="2020-08-12T06:16:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.qa.mobile.testcases.LoginTests@80503]" name="beforeMethod" is-config="true" duration-ms="4580" started-at="2020-08-12T06:16:04Z" finished-at="2020-08-12T06:16:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.mobile.testcases.LoginTests@80503]" name="beforeMethod" is-config="true" duration-ms="287" started-at="2020-08-12T06:16:09Z" finished-at="2020-08-12T06:16:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.mobile.testcases.LoginTests.invalidPassword()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="invalidPassword()[pri:0, instance:com.qa.mobile.testcases.LoginTests@80503]" name="invalidPassword" duration-ms="10357" started-at="2020-08-12T06:16:09Z" finished-at="2020-08-12T06:16:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- invalidPassword -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.qa.mobile.testcases.LoginTests@80503]" name="afterMethod" is-config="true" duration-ms="1" started-at="2020-08-12T06:16:19Z" finished-at="2020-08-12T06:16:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.mobile.testcases.LoginTests@80503]" name="afterMethod" is-config="true" duration-ms="14571" started-at="2020-08-12T06:16:19Z" finished-at="2020-08-12T06:16:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidPassword status=SUCCESS method=LoginTests.invalidPassword()[pri:0, instance:com.qa.mobile.testcases.LoginTests@80503] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.qa.mobile.testcases.LoginTests@80503]" name="beforeMethod" is-config="true" duration-ms="4068" started-at="2020-08-12T06:16:34Z" finished-at="2020-08-12T06:16:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.mobile.testcases.LoginTests@80503]" name="beforeMethod" is-config="true" duration-ms="3" started-at="2020-08-12T06:16:38Z" finished-at="2020-08-12T06:16:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.mobile.testcases.LoginTests.invalidUserName()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="invalidUserName()[pri:0, instance:com.qa.mobile.testcases.LoginTests@80503]" name="invalidUserName" duration-ms="4293" started-at="2020-08-12T06:16:38Z" finished-at="2020-08-12T06:16:42Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Username and password do not match any user in this service.] but found [Username and password do not match any user in this service.sdfdf]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Username and password do not match any user in this service.] but found [Username and password do not match any user in this service.sdfdf]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at com.qa.mobile.testcases.LoginTests.invalidUserName(LoginTests.java:74)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:40)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:489)
at org.testng.internal.thread.ThreadUtil$1.call(ThreadUtil.java:52)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[This is the sample screenshot]]>
            </line>
            <line>
              <![CDATA[<a href='D:\POC\JAVA Selenium TDD\AppiumMobileAutomation\Screenshots\Android_Pixel_2\2020-08-12-11-44-45\LoginTests\invalidUserName.png'> <img src='D:\POC\JAVA Selenium TDD\AppiumMobileAutomation\Screenshots\Android_Pixel_2\2020-08-12-11-44-45\LoginTests\invalidUserName.png' height='400' width='400'/> </a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- invalidUserName -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.qa.mobile.testcases.LoginTests@80503]" name="afterMethod" is-config="true" duration-ms="1" started-at="2020-08-12T06:16:44Z" finished-at="2020-08-12T06:16:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.mobile.testcases.LoginTests@80503]" name="afterMethod" is-config="true" duration-ms="4320" started-at="2020-08-12T06:16:44Z" finished-at="2020-08-12T06:16:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=invalidUserName status=FAILURE method=LoginTests.invalidUserName()[pri:0, instance:com.qa.mobile.testcases.LoginTests@80503] output=This is the sample screenshot]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:com.qa.mobile.testcases.LoginTests@80503]" name="beforeMethod" is-config="true" duration-ms="3834" started-at="2020-08-12T06:16:48Z" finished-at="2020-08-12T06:16:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:com.qa.mobile.testcases.LoginTests@80503]" name="beforeMethod" is-config="true" duration-ms="3" started-at="2020-08-12T06:16:52Z" finished-at="2020-08-12T06:16:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void com.qa.mobile.testcases.LoginTests.successfulLogin()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="successfulLogin()[pri:0, instance:com.qa.mobile.testcases.LoginTests@80503]" name="successfulLogin" duration-ms="8299" started-at="2020-08-12T06:16:52Z" finished-at="2020-08-12T06:17:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- successfulLogin -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:com.qa.mobile.testcases.LoginTests@80503]" name="afterMethod" is-config="true" duration-ms="1" started-at="2020-08-12T06:17:00Z" finished-at="2020-08-12T06:17:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:com.qa.mobile.testcases.LoginTests@80503]" name="afterMethod" is-config="true" duration-ms="4786" started-at="2020-08-12T06:17:00Z" finished-at="2020-08-12T06:17:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=successfulLogin status=SUCCESS method=LoginTests.successfulLogin()[pri:0, instance:com.qa.mobile.testcases.LoginTests@80503] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:com.qa.mobile.testcases.LoginTests@80503]" name="afterClass" is-config="true" duration-ms="1" started-at="2020-08-12T06:17:05Z" finished-at="2020-08-12T06:17:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterTest()[pri:0, instance:com.qa.mobile.testcases.LoginTests@80503]" name="afterTest" is-config="true" duration-ms="3623" started-at="2020-08-12T06:17:05Z" finished-at="2020-08-12T06:17:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:com.qa.mobile.testcases.LoginTests@80503]" name="afterSuite" is-config="true" duration-ms="2" started-at="2020-08-12T06:17:10Z" finished-at="2020-08-12T06:17:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.qa.mobile.testcases.LoginTests -->
    </test> <!-- Pixel_2 -->
  </suite> <!-- Appium Mobile Automation -->
</testng-results>
